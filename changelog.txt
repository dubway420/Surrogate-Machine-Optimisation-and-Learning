Version 0.2.2
* Adapting test_single.py to obtain dataset, features, and labels from the experiment_input_files
* Added some tools to machine_learning/utils.py to aid extraction of model parameters

Version 0.2.1
* Adapting the way experiment/trial objects are created to allow them to called/used in testing
* trial_common_params now detects the file from which it was called - testing or experiment
* trial_common_params then loads the appropriate dataset - train or test

Version 0.2
* Adapting framework for testing on cluster systems
* Added script file test_multiple_single.sh with module loading
* Added test_start.py and results_summary.xlsx

--------------

Version 0.1.12
* test_single.py gets list of files then iterates through. 
* handles when there are no .mod files

Version 0.1.11.4
* number of array jobs now dependent on number of py files (32*num)
* .gitignore now ignores journal file

Version 0.1.11.3
* Change to model_training.py so that it saves experiment info to journal
* Journal log includes start times, iteration number, end times and losses

Version 0.1.11.2
* Minor change to the way run_local.sh copies folders when a trial folder already exists

Version 0.1.11.1
* Minor change to run.sh to change folder at start of run
* Including experiment_evaluation.sh changes which were missed out of last commit

Version 0.1.11
* Runtime changes
* Writing experiment information to journal file
* Experiments number now dependent on number of .py files in experiment_input_files

Version 0.1.10.1
* Summary output now written to excel file

Version 0.1.10
* Adding summary output to test_single.py

Version 0.1.9
* Added local run file

Version 0.1.8
* Started making updates and enhancements to dataset_visualisation.py in preparation for the 
  publication of a tutorial

Version 0.1.7.2
* Have added arguement in correlation_foursquare in callbacks to allow clipping of the y axis 
  to 0 to 1

Version 0.1.7.1
* Minor change to print statements in test.py

Version 0.1.7
* Post test results reader created
* import cleanup

Version 0.1.6.1
* Removal of one redundant commented out line

Version 0.1.6
* Made changes to test.py to bring it in line with the way test_single.py works
* Changes include command line specification of augmentation for scalling
* Moved some utility functions to machine_learning.utils
* Changed import statements to reflect above point
* Minor fix to the way dataset_generators.py generates file names for augmentated datasets

Version 0.1.5.3
* Bug fix to remove reference to imported object that no longer exists

Version 0.1.5.2
* Removed tensorflow_probability import statement from machine_learning.losses

Version 0.1.5.1
* Adjustment factor is now based on prediction rather than ground truth
* Fully set up normal distribution loss function and tested

Version 0.1.5
* New loss function that uses the distribution of the data

Version 0.1.4.3
* Added a file to generate transformers for various augmentation arrangements
* test_single.py now has command line options for specifying the augmentation
* general refinement for how augmentation is handled, names generated etc.

Version 0.1.4.2
* Arguement handling for augmentation is now a bit more refined. Can now use integers or iterables of integers to specify the augmentation.
* Minor cleanup of the plotting features in a callback.
* Single testing transformer arguements simplified

Version 0.1.4.1
* Minor corrections to indentation in loading block for displacements

Version 0.1.4
* Scaling of transformer is now save-able
* The transformer can then be loaded in the test script

Version 0.1.3
* Adding test files for testing a single case/folder
* Several commits have involved clean up - deleting files and ignoring non-codebase files
* Minor changes to README.md

Version 0.1.2.0
* Minor grammatical change in experiment_summary.py

Version 0.1.1.3
* some other minor fixes

Version 0.1.1.2
* made some corrections to make it work server side - there was an extraneous equals symbol and added an email alert

Version 0.1.1.1
* Adding script files for running testing on the CSF3 system - files added: 1) test.sh 2) executeTest.sh

Version 0.1.1.0
* run.sh now outputs some user readable information

Version 0.1.0.1
* test.py has now been parameterised - a parameter can be specified at the command line to give the location of the
  model(s) to be tested.

Version 0.1
* Created first versioned release
* Framework logs data about itself to the experiment.info file - including version, package numbers etc.
